// An 8-bit counter that increments every timestep. After the counter reaches
// its maximum value, it resets back to 0. An n-bit counter requires O(n^2)
// rules to define, and these rules involve O(n^2) atoms.
bits(B7, B6, B5, B4, B3, B2, B1, B0) :- b7(B7), b6(B6), b5(B5), b4(B4),
                                        b3(B3), b2(B2), b1(B1), b0(B0).

b0(#l, 0)@0 :- .
b0(0)@next :- b0(1).
b0(1)@next :- b0(0).

b1(#l, 0)@0 :- .
b1(0)@next :- b1(1), b0(1).
b1(1)@next :- b1(0), b0(1).
b1(X)@next :- b1(X), b0(0).

b2(#l, 0)@0 :- .
b2(0)@next :- b2(1), b1(1), b0(1).
b2(1)@next :- b2(0), b1(1), b0(1).
b2(X)@next :- b2(X), b0(0).
b2(X)@next :- b2(X), b1(0).

b3(#l, 0)@0 :- .
b3(0)@next :- b3(1), b2(1), b1(1), b0(1).
b3(1)@next :- b3(0), b2(1), b1(1), b0(1).
b3(X)@next :- b3(X), b0(0).
b3(X)@next :- b3(X), b1(0).
b3(X)@next :- b3(X), b2(0).

b4(#l, 0)@0 :- .
b4(0)@next :- b4(1), b3(1), b2(1), b1(1), b0(1).
b4(1)@next :- b4(0), b3(1), b2(1), b1(1), b0(1).
b4(X)@next :- b4(X), b0(0).
b4(X)@next :- b4(X), b1(0).
b4(X)@next :- b4(X), b2(0).
b4(X)@next :- b4(X), b3(0).

b5(#l, 0)@0 :- .
b5(0)@next :- b5(1), b4(1), b3(1), b2(1), b1(1), b0(1).
b5(1)@next :- b5(0), b4(1), b3(1), b2(1), b1(1), b0(1).
b5(X)@next :- b5(X), b0(0).
b5(X)@next :- b5(X), b1(0).
b5(X)@next :- b5(X), b2(0).
b5(X)@next :- b5(X), b3(0).
b5(X)@next :- b5(X), b4(0).

b6(#l, 0)@0 :- .
b6(0)@next :- b6(1), b5(1), b4(1), b3(1), b2(1), b1(1), b0(1).
b6(1)@next :- b6(0), b5(1), b4(1), b3(1), b2(1), b1(1), b0(1).
b6(X)@next :- b6(X), b0(0).
b6(X)@next :- b6(X), b1(0).
b6(X)@next :- b6(X), b2(0).
b6(X)@next :- b6(X), b3(0).
b6(X)@next :- b6(X), b4(0).
b6(X)@next :- b6(X), b5(0).

b7(#l, 0)@0 :- .
b7(0)@next :- b7(1), b6(1), b5(1), b4(1), b3(1), b2(1), b1(1), b0(1).
b7(1)@next :- b7(0), b6(1), b5(1), b4(1), b3(1), b2(1), b1(1), b0(1).
b7(X)@next :- b7(X), b0(0).
b7(X)@next :- b7(X), b1(0).
b7(X)@next :- b7(X), b2(0).
b7(X)@next :- b7(X), b3(0).
b7(X)@next :- b7(X), b4(0).
b7(X)@next :- b7(X), b5(0).
b7(X)@next :- b7(X), b6(0).
